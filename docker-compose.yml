# adapted from
# https://pentacent.medium.com/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71

version: "3.3"
services:
  server:
    build: server
    restart: always
    ports:
      - "8080:8080"
    environment: # some values like proxy credentials and honeycomb API key are from local .env file
      - PROXY_ADDRESS=${PROXY_ADDRESS}
      - PROXY_USER=${PROXY_USER}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
      - OTEL_EXPORTER_OTLP_HEADERS=x-honeycomb-team=${HONEYCOMB_API_KEY}
      - OTEL_SERVICE_NAME=youtube-downloader-server
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
      - OTEL_EXPORTER_OTLP_ENDPOINT=https://api.honeycomb.io
    volumes:
      - ./server/app/frontend:/app/frontend
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  nginx:
    image: nginx:alpine
    restart: always
    # auto-renew certificate
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  certbot:
    image: certbot/certbot
    restart: always
    # auto-renew certificate
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  # cleanup any downloaded files not handled by the server, e.g. a request fails or the client disconnects
  # or some yt-dlp problem.
  file-cleaner:
    image: alpine
    container_name: file-cleaner
    build:
      context: ./server
      dockerfile: Dockerfile.file_cleaner
    volumes:
      - /tmp:/tmp
    command: [ "sh", "-c", "while true; do /app/cleanup_download_files.sh; sleep 600; done" ]
    restart: always
